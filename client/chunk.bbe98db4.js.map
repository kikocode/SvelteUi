{"version":3,"file":"chunk.bbe98db4.js","sources":["../../../src/components/Textfield/Textfield.svelte"],"sourcesContent":["<script>\r\n\timport { hexToRGB } from '../utils/color.js';\r\n\timport { onMount } from 'svelte';\r\n\timport { createEventDispatcher } from 'svelte';\r\n\r\n\tconst dispatch = createEventDispatcher();\r\n\r\n\tconst VERSION = 1.2;\r\n\r\n\texport let name = '';\r\n\texport let label = '';\r\n\texport let variant = 'outlined'; // outlined, filled, simple\r\n\texport let compact = false;\r\n\texport let error = false;\r\n\texport let disabled = false;\r\n\texport let multiline = false;\r\n\texport let color = '#ffbb77';\r\n\texport let helperText = '';\r\n\texport let type = 'text';\r\n\texport let append = '';\r\n\texport let prepend = '';\r\n\r\n\texport let style = '';\r\n\texport let className = '';\r\n\texport { className as class };\r\n\r\n\tlet focused = false;\r\n\tlet labelRef;\r\n\tlet labelWidth;\r\n\tlet labelHeight;\r\n\tlet labelX;\r\n\tlet labelY;\r\n\tlet prependRef;\r\n\tlet prependWidth;\r\n\tlet appendRef;\r\n\tlet appendWidth;\r\n\tlet height;\r\n\r\n\tlet LABEL_SCALE = 0.75;\r\n\tlet labelGap = 3;\r\n\tlet paddingLeft = 10;\r\n\r\n\t$: focusedClass = focused && !disabled ? 'textfield--focused' : '';\r\n\t$: activeClass = name != '' || focused ? 'textfield--active' : '';\r\n\t$: compactClass = compact ? 'textfield--compact' : '';\r\n\t$: errorClass = error ? 'textfield--error' : '';\r\n\t$: disabledClass = disabled ? 'textfield--disabled' : '';\r\n\t$: multilineClass = multiline ? 'textfield--multiline' : '';\r\n\t$: prependClass = append ? 'textfield--has--prepend' : '';\r\n\t$: appendClass = append ? 'textfield--has--append' : '';\r\n\t$: variantClass = variant ? 'textfield--' + variant : '';\r\n\t$: textfieldClasses = ` ${className} ${focusedClass} ${activeClass} ${compactClass} ${errorClass} ${disabledClass} ${multilineClass} ${variantClass} ${prependClass} ${appendClass}`;\r\n\r\n\t$: computeVariantProps(variant);\r\n\r\n\tconst computeVariantProps = variant => {\r\n\t\tif (variant == 'outlined') {\r\n\t\t\theight = 55;\r\n\t\t\tif (compact) height = 39;\r\n\t\t} else if (variant == 'filled') {\r\n\t\t\theight = 55;\r\n\t\t\tif (compact) height = 45;\r\n\t\t} else if ((variant = 'simple')) {\r\n\t\t\theight = 36;\r\n\t\t\tif (compact) height = 30;\r\n\t\t} else {\r\n\t\t\theight = 55;\r\n\t\t}\r\n\t};\r\n\r\n\t$: textfieldStyle = `\r\n    ${style};\r\n    --primary-color:  ${hexToRGB(color)};\r\n    --primary-color-light:  ${hexToRGB(color, 0.85)};\r\n\r\n    --height: ${height}px;\r\n    --padding-left: ${paddingLeft}px;\r\n\r\n    --prepend-width: ${prependWidth}px;\r\n    --append-width: ${appendWidth}px;\r\n\r\n    --label-scale: ${LABEL_SCALE};\r\n    --label-width: ${labelWidth}px;\r\n    --label-x: ${labelX}px;\r\n    --label-y: ${labelY}px;\r\n    --transform-label: translate(${labelX}px, ${labelY}px) scale(1);\r\n    --transform-label-filled: translateX(${labelX}px) translateY(${labelY -\r\n\t\t7}px) scale(${LABEL_SCALE});\r\n  `;\r\n\r\n\tonMount(() => {\r\n\t\tappendWidth = appendRef ? appendRef.offsetWidth : 0;\r\n\t\tprependWidth = prependRef ? prependRef.offsetWidth : 0;\r\n\r\n\t\tlabelWidth = labelRef.offsetWidth * LABEL_SCALE + labelGap;\r\n\t\tlabelHeight = labelRef.offsetHeight;\r\n\t\tlabelY = Math.round(height / 2 - labelHeight / 2);\r\n\t\tlabelX = prependWidth;\r\n\t\tif (variant == 'simple') {\r\n\t\t\tlabelX = 0;\r\n\t\t\tpaddingLeft = 0;\r\n\t\t}\r\n\t});\r\n\r\n\tconst handleChange = e => {\r\n\t\tname = e.target.value;\r\n\t\tdispatch('change', e);\r\n\t};\r\n\tconst handleFocus = e => {\r\n\t\tfocused = true;\r\n\t};\r\n\tconst handleBlur = e => {\r\n\t\tfocused = false;\r\n\t};\r\n</script>\r\n\r\n<style type=\"text/scss\">\r\n\t.textfield {\r\n\t\t--transition-fast: 150ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\t\t--error-color: #e0274f;\r\n\t\t--disabled-color: rgba(0, 0, 0, 0.25);\r\n\r\n\t\t--spacing-input-outlined: 0 13px;\r\n\t\t--spacing-input-filled: 28px 13px 9px;\r\n\t\t--spacing-input-simple: 8px 0 8px;\r\n\r\n\t\tdisplay: inline-flex;\r\n\t\tflex-flow: column;\r\n\t\tmargin-right: 8px;\r\n\t\tmargin-left: 8px;\r\n\t\tmargin-top: 16px;\r\n\t\tmargin-bottom: 8px;\r\n\t\tmin-height: 40px;\r\n\r\n\t\t* {\r\n\t\t\tbox-sizing: border-box;\r\n\t\t}\r\n\t}\r\n\r\n\t.textfield__element {\r\n\t\tposition: relative;\r\n\t\tdisplay: flex;\r\n\t}\r\n\r\n\t.textfield__input {\r\n\t\twidth: 100%;\r\n\t\tmin-width: 80px;\r\n\t\theight: var(--height);\r\n\t\tpadding: var(--spacing-input-outlined);\r\n\t\tborder-radius: 5px;\r\n\t\tfont-size: 16px;\r\n\t\toutline: none;\r\n\t\tmargin: 0;\r\n\t\tborder: none;\r\n\t\tbackground: none;\r\n\r\n\t\t&::-ms-clear {\r\n\t\t\tdisplay: none;\r\n\t\t}\r\n\t}\r\n\r\n\t.textfield__label {\r\n\t\tposition: absolute;\r\n\t\tuser-select: none;\r\n\t\tpointer-events: none;\r\n\t\tz-index: 1;\r\n\t\ttransform-origin: top left;\r\n\t\ttransform: var(--transform-label);\r\n\t\ttransition: transform var(--transition-fast), color var(--transition-fast);\r\n\t\tpadding-left: 2px;\r\n\t\twhite-space: pre;\r\n\t\tmax-width: calc(100% - 35px);\r\n\t\toverflow: hidden;\r\n\t\ttext-overflow: ellipsis;\r\n\t\tcolor: rgba(0, 0, 0, 0.6);\r\n\t}\r\n\r\n\t.textfield__border__segment {\r\n\t\ttransition: all var(--transition-fast);\r\n\t\tborder-color: rgba(0, 0, 0, 0.25);\r\n\t\tborder-width: 1px;\r\n\t\tborder-style: solid;\r\n\t}\r\n\r\n\t.textfield__border {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: flex-start;\r\n\t\tbox-sizing: border-box;\r\n\t\tposition: absolute;\r\n\t\ttop: 0px;\r\n\t\tleft: 0px;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tdisplay: inline-flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tborder-radius: 4px;\r\n\t\tbackground: none;\r\n\t\tpointer-events: none;\r\n\t\ttransition: all var(--transition-fast);\r\n\t}\r\n\r\n\t.textfield__border__start {\r\n\t\twidth: var(--padding-left);\r\n\t\theight: 100%;\r\n\t\tborder-radius: 4px 0 0px 4px;\r\n\t\tborder-right: none;\r\n\t}\r\n\r\n\t.textfield__border__gap {\r\n\t\twidth: var(--label-width);\r\n\t\theight: 100%;\r\n\t\tborder-left: none;\r\n\t\tborder-right: none;\r\n\t}\r\n\r\n\t.textfield__border__end {\r\n\t\tflex: 1;\r\n\t\tflex-shrink: 1;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tborder-radius: 0 5px 5px 0;\r\n\t\tborder-left: none;\r\n\t}\r\n\r\n\t.textfield__prepend,\r\n\t.textfield__append {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\twhite-space: pre;\r\n\t\tpadding: var(--spacing-input-outlined);\r\n\t\tcolor: rgba(0, 0, 0, 0.5);\r\n\t\tpointer-events: none;\r\n\t}\r\n\r\n\t.textfield__prepend {\r\n\t\tpadding-right: 0;\r\n\t}\r\n\t.textfield__append {\r\n\t\tpadding-left: 0;\r\n\t}\r\n\r\n\t.textfield__helper__text {\r\n\t\tfont-size: 12px;\r\n\t\tmargin-top: 5px;\r\n\t\tmargin-left: 13px;\r\n\t\tmargin-right: 13px;\r\n\t\tcolor: rgba(0, 0, 0, 0.5);\r\n\t}\r\n\r\n\t/* Hover */\r\n\t.textfield:hover {\r\n\t\t.textfield__border__segment {\r\n\t\t\tborder-color: rgba(0, 0, 0, 0.85);\r\n\t\t}\r\n\t}\r\n\r\n\t/* Active */\r\n\t.textfield--active {\r\n\t\t.textfield__label {\r\n\t\t\ttransform: translateY(-7px) scale(var(--label-scale));\r\n\t\t\tcolor: rgba(0, 0, 0, 0.5);\r\n\t\t}\r\n\t\t.textfield__border .textfield__border__segment.textfield__border__gap {\r\n\t\t\tborder-top: 0px solid transparent;\r\n\t\t}\r\n\t}\r\n\r\n\t/* Focused */\r\n\t.textfield--focused {\r\n\t\t.textfield__label {\r\n\t\t\tcolor: rgba(0, 0, 0, 0.85);\r\n\t\t\tcolor: var(--primary-color-light);\r\n\t\t}\r\n\t\t.textfield__border .textfield__border__segment {\r\n\t\t\tborder-color: var(--primary-color);\r\n\t\t\tborder-width: 2px;\r\n\t\t}\r\n\t\t.textfield__border {\r\n\t\t\tborder-width: 2px;\r\n\t\t}\r\n\t}\r\n\r\n\t/* Error */\r\n\t.textfield--error {\r\n\t\t.textfield__border .textfield__border__segment {\r\n\t\t\tborder-color: var(--error-color);\r\n\t\t}\r\n\t\t.textfield__label {\r\n\t\t\tcolor: var(--error-color);\r\n\t\t}\r\n\t\t.textfield__helper__text {\r\n\t\t\tcolor: var(--error-color);\r\n\t\t}\r\n\t}\r\n\r\n\t/* Disabled */\r\n\t.textfield--disabled {\r\n\t\tuser-select: none;\r\n\t\tpointer-events: none;\r\n\t\t.textfield__label {\r\n\t\t\tcolor: var(--disabled-color);\r\n\t\t}\r\n\t\t.textfield__border__segment {\r\n\t\t\tborder-color: var(--disabled-color);\r\n\t\t}\r\n\t\t.textfield__input {\r\n\t\t\tcolor: var(--disabled-color);\r\n\t\t}\r\n\t\t.textfield__helper__text {\r\n\t\t\tcolor: var(--disabled-color);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n   * Compact\r\n   */\r\n\t.textfield--compact {\r\n\t\t.textfield__input {\r\n\t\t\theight: var(--height);\r\n\t\t}\r\n\t\t.textfield__label {\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n  * Filled\r\n  */\r\n\t.textfield--filled {\r\n\t\t.textfield__input {\r\n\t\t\tpadding: var(--spacing-input-filled);\r\n\t\t}\r\n\t\t.textfield__border__segment {\r\n\t\t\tborder: none;\r\n\t\t}\r\n\t\t.textfield__border {\r\n\t\t\tborder: none;\r\n\t\t\tbackground: rgba(0, 0, 0, 0.07);\r\n\t\t\tborder-radius: 5px 5px 0 0;\r\n\t\t\tborder-bottom: 1px solid rgba(0, 0, 0, 0.3);\r\n\t\t}\r\n\t\t.textfield__label {\r\n\t\t\tbackground: none;\r\n\t\t}\r\n\t\t/* Hover */\r\n\t\t&:hover .textfield__border {\r\n\t\t\tbackground: rgba(0, 0, 0, 0.11);\r\n\t\t}\r\n\t\t/* Active */\r\n\t\t&.textfield--active .textfield__label {\r\n\t\t\ttransform: var(--transform-label-filled);\r\n\t\t}\r\n\t\t/* Focused */\r\n\t\t&.textfield--focused .textfield__border {\r\n\t\t\tborder-width: 2px;\r\n\t\t\tborder-color: var(--primary-color);\r\n\t\t}\r\n\t\t/* Compact */\r\n\t\t&.textfield--compact .textfield__input {\r\n\t\t\tpadding: 20px 13px 6px;\r\n\t\t\theight: var(--height);\r\n\t\t}\r\n\t\t/* Error */\r\n\t\t&.textfield--error .textfield__border {\r\n\t\t\tborder-bottom: 2px solid var(--error-color);\r\n\t\t}\r\n\t\t/* Disabled */\r\n\t\t&.textfield--disabled .textfield__border {\r\n\t\t\tborder-bottom-style: dotted;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n  * Simple\r\n  */\r\n\t.textfield--simple {\r\n\t\t.textfield__input {\r\n\t\t\tmargin: 0;\r\n\t\t\tpadding: var(--spacing-input-simple);\r\n\t\t\theight: var(--height);\r\n\t\t}\r\n\t\t.textfield__border__segment {\r\n\t\t\tborder: none;\r\n\t\t}\r\n\t\t.textfield__border {\r\n\t\t\tborder-bottom: 1px solid grey;\r\n\t\t\tborder-radius: 0;\r\n\t\t}\r\n\t\t.textfield__label {\r\n\t\t\tpadding: 0;\r\n\t\t}\r\n\t\t.textfield__prepend {\r\n\t\t\tpadding-left: 0;\r\n\t\t}\r\n\t\t.textfield__append {\r\n\t\t\tpadding-right: 0;\r\n\t\t}\r\n\t\t&.textfield--has--prepend {\r\n\t\t\t.textfield__input {\r\n\t\t\t\tpadding-left: 10px;\r\n\t\t\t\tpadding-right: 10px;\r\n\t\t\t}\r\n\t\t\t.textfield__label {\r\n\t\t\t\ttransform: translateX(calc(var(--prepend-width) + 10px))\r\n\t\t\t\t\ttranslateY(var(--label-y));\r\n\t\t\t}\r\n\t\t}\r\n\t\t.textfield__helper__text {\r\n\t\t\tmargin-left: 0;\r\n\t\t\tmargin-right: 0;\r\n\t\t}\r\n\t\t/* hover */\r\n\t\t&:hover {\r\n\t\t\t.textfield__border {\r\n\t\t\t\tborder-color: black;\r\n\t\t\t\tborder-width: 2px;\r\n\t\t\t}\r\n\t\t}\r\n\t\t/* compact */\r\n\t\t&.textfield--compact {\r\n\t\t\t.textfield__input {\r\n\t\t\t\theight: var(--height);\r\n\t\t\t}\r\n\t\t}\r\n\t\t/* focused */\r\n\t\t&.textfield--focused {\r\n\t\t\t.textfield__border {\r\n\t\t\t\tborder-color: var(--primary-color);\r\n\t\t\t\tborder-width: 2px;\r\n\t\t\t}\r\n\t\t}\r\n\t\t/* active */\r\n\t\t&.textfield--active {\r\n\t\t\t.textfield__label {\r\n\t\t\t\ttransform: translateX(0) translateY(-10px) scale(var(--label-scale));\r\n\t\t\t}\r\n\t\t}\r\n\t\t/* multiline */\r\n\t\t&.textfield--multiline {\r\n\t\t\t.textfield__input {\r\n\t\t\t\tmargin: 12px 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\t/* error */\r\n\t\t&.textfield--error {\r\n\t\t\t.textfield__border {\r\n\t\t\t\tborder-width: 2px;\r\n\t\t\t\tborder-color: var(--error-color);\r\n\t\t\t}\r\n\t\t}\r\n\t\t/* disabled */\r\n\t\t&.textfield--disabled {\r\n\t\t\t.textfield__border {\r\n\t\t\t\tborder-color: var(--disabled-color);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n  * Multiline\r\n  */\r\n\t.textfield--multiline {\r\n\t\t.textfield__input {\r\n\t\t\twidth: auto;\r\n\t\t\tpadding: 0;\r\n\t\t\tmargin: 15px 13px;\r\n\t\t\tmargin-bottom: 10px;\r\n\t\t}\r\n\t\t/* Filled */\r\n\t\t&.textfield--filled {\r\n\t\t\t.textfield__input {\r\n\t\t\t\tpadding: 0;\r\n\t\t\t\tmargin: var(--spacing-input-filled);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n</style>\r\n\r\n<div class={'textfield ' + textfieldClasses} style={textfieldStyle}>\r\n\t<div class=\"textfield__element\">\r\n\t\t{#if prepend}\r\n\t\t\t<div class={'textfield__prepend'} bind:this={prependRef}>\r\n\t\t\t\t{@html prepend}\r\n\t\t\t</div>\r\n\t\t{/if}\r\n\r\n\t\t<div class=\"textfield__border\">\r\n\t\t\t<div class=\"textfield__border__start textfield__border__segment\" />\r\n\t\t\t<div class=\"textfield__border__gap textfield__border__segment\">\r\n\t\t\t\t<div bind:this={labelRef} class=\"textfield__label\">{label}</div>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"textfield__border__end textfield__border__segment\" />\r\n\t\t</div>\r\n\t\t{#if multiline}\r\n\t\t\t<textarea\r\n\t\t\t\tclass=\"textfield__input\"\r\n\t\t\t\t{type}\r\n\t\t\t\tvalue={name}\r\n\t\t\t\ton:change={handleChange}\r\n\t\t\t\ton:keyup={handleChange}\r\n\t\t\t\ton:keydown={handleChange}\r\n\t\t\t\ton:focus={handleFocus}\r\n\t\t\t\ton:blur={handleBlur} />\r\n\t\t{:else}\r\n\t\t\t<input\r\n\t\t\t\tclass=\"textfield__input\"\r\n\t\t\t\t{type}\r\n\t\t\t\tvalue={name}\r\n\t\t\t\ton:change={handleChange}\r\n\t\t\t\ton:keydown={handleChange}\r\n\t\t\t\ton:keyup={handleChange}\r\n\t\t\t\ton:focus={handleFocus}\r\n\t\t\t\ton:blur={handleBlur} />\r\n\t\t{/if}\r\n\t\t{#if append}\r\n\t\t\t<div class={'textfield__append'} bind:this={appendRef}>\r\n\t\t\t\t{@html append}\r\n\t\t\t</div>\r\n\t\t{/if}\r\n\t</div>\r\n\t{#if helperText}\r\n\t\t<div class=\"textfield__helper__text\">{helperText}</div>\r\n\t{/if}\r\n</div>\r\n"],"names":["prepend","type","name","handleChange","handleFocus","handleBlur","append","helperText","multiline","label","textfieldClasses","textfieldStyle","LABEL_SCALE","labelGap","dispatch","createEventDispatcher","labelRef","labelWidth","labelHeight","labelX","labelY","prependRef","prependWidth","appendRef","appendWidth","height","variant","compact","error","disabled","color","style","className","focused","paddingLeft","onMount","offsetWidth","offsetHeight","Math","round","focusedClass","activeClass","compactClass","errorClass","disabledClass","multilineClass","prependClass","appendClass","variantClass","computeVariantProps","hexToRGB","e","target","value"],"mappings":"uZAwYWA,2DAAAA,kPAwBNC,gBACMC,uBACIC,8BACCA,4BACFA,4BACAC,0BACDC,2DANRJ,yBACMC,sOAXND,gBACMC,uBACIC,4BACDA,8BACEA,4BACFC,0BACDC,2DANRJ,yBACMC,4NAmBAI,2DAAAA,gGAK6BC,yEAAAA,iJAAAA,gFAzC1B,qCAaPC,oCAqBM,iBAMG,yHA/BwCC,+XAAAA,onBAX5C,eAAeC,kDAAyBC,iNAE7CX,6EASiDS,sEAyBjDH,kEAMDC,+FA1CM,eAAeG,oFAAyBC,8FA9VnD,IAAIC,EAAc,IACdC,EAAW,oBAlCf,MAAMC,EAAWC,IAIjB,IAkBIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,QA3BOvB,EAAO,GAAEO,MACTA,EAAQ,GAAEiB,QACVA,EAAU,WAAUC,QACpBA,GAAU,EAAKC,MACfA,GAAQ,EAAKC,SACbA,GAAW,EAAKrB,UAChBA,GAAY,EAAKsB,MACjBA,EAAQ,UAASvB,WACjBA,EAAa,GAAEN,KACfA,EAAO,OAAMK,OACbA,EAAS,GAAEN,QACXA,EAAU,GAAE+B,MAEZA,EAAQ,SACRC,EAAY,MAGnBC,GAAU,EAcVC,EAAc,GAkDlBC,EAAQ,qBACPX,EAAcD,EAAYA,EAAUa,YAAc,oBAClDd,EAAeD,EAAaA,EAAWe,YAAc,kBAErDnB,EAAaD,EAASoB,YAAcxB,EAAcC,GAClDK,EAAcF,EAASqB,wBACvBjB,EAASkB,KAAKC,MAAMd,EAAS,EAAIP,EAAc,eAC/CC,EAASG,GACM,UAAXI,eACHP,EAAS,mBACTe,EAAc,u9BA1DbM,EAAeP,IAAYJ,EAAW,qBAAuB,yCAC7DY,EAAsB,IAARvC,GAAc+B,EAAU,oBAAsB,gCAC5DS,EAAef,EAAU,qBAAuB,4BAChDgB,EAAaf,EAAQ,mBAAqB,kCAC1CgB,EAAgBf,EAAW,sBAAwB,oCACnDgB,EAAiBrC,EAAY,uBAAyB,+BACtDsC,EAAexC,EAAS,0BAA4B,8BACpDyC,EAAczC,EAAS,yBAA2B,gCAClD0C,EAAetB,EAAU,cAAgBA,EAAU,uLACnDhB,MAAuBsB,KAAaQ,KAAgBC,KAAeC,KAAgBC,KAAcC,KAAiBC,KAAkBG,KAAgBF,KAAgBC,gBAI3IrB,CAAAA,IACZ,YAAXA,cACHD,EAAS,IACLE,cAASF,EAAS,KACD,UAAXC,cACVD,EAAS,IACLE,cAASF,EAAS,MACXC,EAAU,sBACrBD,EAAS,IACLE,cAASF,EAAS,gBAEtBA,EAAS,KAbRwB,CAAoBvB,mJAiBpBf,WACEoB,6BACkBmB,EAASpB,oCACHoB,EAASpB,EAAO,0BAE9BL,6BACMS,gCAECZ,6BACDE,8BAEDZ,0BACAK,wBACJE,wBACAC,0CACkBD,QAAaC,4DACLD,mBAAwBC,EACjE,cAAcR,oMAiBMuC,aACpBjD,EAAOiD,EAAEC,OAAOC,OAChBvC,EAAS,SAAUqC,gBAEAA,gBACnBlB,GAAU,eAEQkB,gBAClBlB,GAAU"}